// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum POST_TYPE {
  CONTENT
  EVENT
}

enum REGISTRATION_TYPE {
  SOLO
  GROUP
}

model User {
  ID                  String  @id
  name                String?
  passwordHash        String
  privKeyHash         String
  pubAddress          String
  posts               Post[]
  followers           Follows[] @relation(name: "followers")
  followings          Follows[] @relation(name: "followings")
  certs               Certs[]
  eventRegistrations  EventRegistrations[]
  eventRegInvites     EventRegInvites[]
}

model Post {
  ID                  String  @id
  content             String
  postType            POST_TYPE
  name                String?
  dateOfEvent         DateTime?
  location            String ?
  imageUrl            String?
  certAddress         String?
  tags                String[]
  eventRegistrations  EventRegistrations[]
  certs               Certs[]
  createdBy           User  @relation(fields: [createdById], references: [ID])
  createdById         String
  createdAt           DateTime  @default(now())
}

model Follows {
  ID                  String  @id
  follower            User    @relation(name: "followers", fields: [followerId], references: [ID])
  followerId          String
  following           User    @relation(name: "followings", fields: [followingId], references: [ID])
  followingId         String
}


model EventRegistrations {
  ID                  String  @id
  team                String
  teamLeader          String
  post                Post    @relation(fields: [postId], references: [ID])
  postId              String
  user                User    @relation(fields: [userId], references: [ID])
  userId              String
  approved            Boolean @default(false)
  RSVP                Boolean @default(false)
  checkedIn           Boolean @default(false)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime @updatedAt
}

model EventRegInvites {
  ID                  String  @id
  eventRegistrationId String
  invitee             User    @relation(fields: [inviteeId], references: [ID])
  inviteeId           String
  approved            Boolean @default(false)
}

model Certs {
  ID                  String  @id
  token               String
  tokenId             String
  user                User    @relation(fields: [userId], references: [ID])
  userId              String
  event               Post    @relation(fields: [eventId], references: [ID])
  eventId             String
}
